@using Ecommerce.Web.Commons;
@using Ecommerce.Web.Extenions.Class;
@using Ecommerce.Web.Models.Position;
@using Ecommerce.Web.Services.Interfaces;
@using Microsoft.Extensions.Options;
@inject ICommonService common;
@inject IOptions<AppSetting> options
@model Position;
@{
    bool permAddMenu = common.IsPermission(Constants.Menu.Position.Id, Constants.Menu.Position.AddMenu);
    bool permView = common.IsPermission(Constants.Menu.Position.Id, Constants.Menu.Position.View);
    bool permUpdate = common.IsPermission(Constants.Menu.Position.Id, Constants.Menu.Position.Update);
    bool permDelete = common.IsPermission(Constants.Menu.Position.Id, Constants.Menu.Position.Delete);
}
<script>
    let baseApiUrl = '@options.Value.BaseApiUrl';
    let modalUrl = '@Url.Content(Constants.UrlAction.Position.PopUpDialog)';
    let deleteUrl = baseApiUrl + 'Position/';
    let permDelete = ('@permDelete' === 'True') ? true : false;
    let permUpdate = ('@permUpdate' === 'True') ? true : false;
    let permView = ('@permView' === 'True') ? true : false;
    let permAddMenu = ('@permAddMenu' === 'True') ? true : false;

    $(function () {
        getList();
    });

    function getList() {
        $.ajax({
            type: "GET",
            url: baseApiUrl + 'Position',
            headers: { 'Authorization': 'bearer ' + _token },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (response) {
                if (response.isSuccess) onSuccess(response);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
                window.location.href = '/ErrorPages/' + jqXHR.status;
            }
        });
    }

    function onSuccess(response) {
        $('#dtResult').DataTable({
            bDestroy: true,
            bProcessing: true,
            bLenghtChange: true,
            lengthMenu: [[5, 10, 25, -1], [5, 10, 25, "All"]],
            searching: false, //ช่อง search
            responsive: true,
            autoWidth: false,
            bfilter: true,
            bSort: true,
            bPaginate: true,
            fixedHeader: true,
            lengthChange: true, //ปุ่มจำนวนแสดงข้อมูล
            data: response.value,
            columns: [
                {
                    data: 'positionName',
                    render: function (data, type, row, meta) {
                        return row.positionName
                    }
                },
                {
                    data: 'menuDefaultName',
                    render: function (data, type, row, meta) {
                        return row.menuDefaultName
                    }
                },
                {
                    data: 'status',
                    render: function (data, type, row, meta) {
                        return htmlStatusBadge(row);
                    }
                },
                {
                    data: 'createDate',
                    render: function (data, type, row, meta) {
                        return row.createDate
                    }
                },
                {
                    data: 'positionId',
                    render: function (data, type, row, meta) {
                        return htmlPermissionButton(row);
                    }
                },
                {
                    data: 'positionId',
                    render: function (data, type, row, meta) {
                        if (permDelete) {
                            return htmlAllActionButton(row.positionId, row.positionName, modalUrl, deleteUrl);
                        }
                        else if (permUpdate) {
                            return htmlUpdateActionButton(row.positionId, modalUrl)
                        }
                        else {
                            return htmlViewActionButton(row.positionId, modalUrl)
                        }
                    }
                }
            ]
        })
    }

    function htmlPermissionButton(row) {
        let urlPopUpMenuPosition = '@Url.Content(Constants.UrlAction.Position.PopUpMenuPosition)'; //jsTree
        let html;
        if (permAddMenu) {
            html = '<a class="btn btn-info" onclick=openPopup("' + row.positionId + '","View","' + urlPopUpMenuPosition + '","เมนูที่ใช้");>'
                + '<i class="nav-icon fas fa-book"></i></a> ';
        }
        else {
            html = '<a class="btn btn-default" disabled="disabled">'
                + '<i class="nav-icon fas fa-book"></i></a> ';
        }

        return html;
    }
</script>
