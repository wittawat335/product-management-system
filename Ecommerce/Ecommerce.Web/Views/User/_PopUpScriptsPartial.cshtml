@using Ecommerce.Web.Commons;
@using Ecommerce.Web.Models.User;
@model UserViewModel;
<script>
    var action = '@Model.Action';
    $(document).ready(function () {
        checkAction();
        formValidate();
        visiblePassword();
    });

    function visiblePassword(){
        $('#Password').attr('type', 'password');
        $('#Password').click(function () {
            $('#Password').attr('type', $('#Password').attr('type') === 'password' ? 'text' : 'password');
        });
    }

    function checkAction() {
        let action = '@Model.Action';
        switch (action) {
            case '@Constants.Action.View': {
                $('#btnSave').hide();
                setReadOnlyByDiv(true);
                break;
            } 
            case '@Constants.Action.Add':
                $('#Status').val('A');
                break;
            case 'cusUpdate':
                setReadOnly('Username', true);
                break;
            case '@Constants.Action.Update':
                setReadOnly('Username', true);
                break;
        }
    }

    function formValidate() {
        $.validator.setDefaults({
            submitHandler: function () {
                if (action == '@Constants.Action.Add') Insert(baseApiUrl + 'User');
                if (action == '@Constants.Action.Update' || action == 'cusUpdate') Update(baseApiUrl + 'User');
            }
        });
        validate();
    }

    function validate() {
        $('#frmDetail').validate({
            rules: {
                Username: {
                    required: true,
                    minlength: 3
                },
                Password: {
                    required: true,
                    minlength: 3
                },
                PositionId: {
                    required: true,
                },
                FullName: {
                    required: true,
                    minlength: 3
                },
                Email: {
                    required: true,
                    email: true,
                },
                Status: {
                    required: true
                },
            },
            messages: {
                Username: {
                    required: "กรุณาระบุบัญชีผู้ใช้",
                },
                Password: {
                    required: "กรุณาระบุรหัสผ่าน",
                },
                PositionId: {
                    required: "กรุณาเลือกตำแหน่ง",
                },
                FullName: {
                    required: "กรุณาระบุชื่อ-สกุล",
                },
                Email: {
                    required: "กรุณาระบุอีเมลล์",
                },
                Status: {
                    required: "กรุณาเลือกสถานะ",
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
                $(element).addClass('is-valid');
            }
        });
    }
</script>

